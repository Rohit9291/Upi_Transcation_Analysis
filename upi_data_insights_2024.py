# -*- coding: utf-8 -*-
"""UPI Data Insights 2024.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16HiBN8pu-ITWeLhr9eKEmp9RPexHGrdl

# Problem statment

To help fintech startups better understand customer behavior and optimize their UPI-based digital payment services, this project analyzes a dataset of 250,000 UPI transactions from 2024. The goal is to uncover trends in user activity, device preferences, age demographics, transaction timing, and merchant category usage. These insights will enable product, marketing, and operations teams to make data-driven decisions that enhance user experience, drive engagement, and increase UPI adoption.
"""

# Importing ibraries
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

#Reading data
df=pd.read_csv('upi_transactions_2024.csv')

""" ## Data Overview"""

df.head(3)

df.shape

df.info()

#changing the data type
df['timestamp']=pd.to_datetime(df['timestamp'])

df[df.duplicated()]

df.isnull().sum()

list=['transaction type', 'merchant_category','transaction_status','hour_of_day', 'sender_age_group', 'receiver_age_group',
       'sender_state', 'sender_bank', 'receiver_bank', 'device_type',
       'network_type','is_weekend','day_of_week']
for i in list:
  print(i)
  print(f'Value_counts',df[i].value_counts())
  print('-'*50)

for i in list:
  print(i)
  print(f'Value_counts',df[i].unique())
  print('-'*50)

"""## Feature engineering

"""

# I dont want to touch the original data so we create a copy of it
dfn=df

# hour_of_day can be set to Morning to Night
def get_time_of_day(hours):
  if 5 <= hours < 12:
    return 'Morning'
  elif 12<= hours < 17:
    return 'Afternoon'
  elif 17<=hours< 21:
    return 'Evening'
  else:
    return 'Night'

dfn['hour_of_day']=dfn['hour_of_day'].apply(get_time_of_day)

# In device_type we can make Android ,iOS as Phone and web as desktop
def device(type):
  if type in ['Android','iOS']:
    return 'Phone'
  else:
    return 'desktop'


dfn['device_type']=dfn['device_type'].apply(device)

# in is_weekend column 0= Weekday and 1= weekend
def days(num):
  if num==0:
    return 'Weekday'
  else:
    return 'Weekend'

dfn['is_weekend']=df['is_weekend'].apply(days)

# Let us check if features are created or not
dfn.head()

"""## Q1 When do users transact the most?"""

dfn.groupby('hour_of_day')['transaction id'].count()

dfn.groupby('day_of_week')['transaction id'].count()

pd.crosstab(dfn['hour_of_day'], dfn['day_of_week'])

# we can use heatmap to see the exact hour and day of maximum use of UPI
heatmap_data = pd.crosstab(dfn['hour_of_day'], dfn['day_of_week'])
sns.heatmap(heatmap_data, cmap="Blues", annot=True, fmt='d')
plt.title("Transaction Count by Hour and Day of Week")
plt.xlabel("Day of Week")
plt.ylabel("Hour of Day")
plt.show()

"""- The highest number of transactions happen on Monday evenings.
- The lowest number of transactions occur on Saturday nights.
- Across all days, evenings consistently have the most activity, while nights see the least.

## Q2 Which age groups are most active?
"""

# Seeing sender_age_group
count_sender_age_group=dfn['sender_age_group'].value_counts()
count_sender_age_group=pd.DataFrame(count_sender_age_group)
sns.barplot(data=count_sender_age_group,x='sender_age_group',y='count')
plt.title('count of Sender age group')
plt.xlabel('sender_age_group')
plt.show()

# seeing receiver_age_group
count_receiver_age_group=dfn['receiver_age_group'].value_counts()
count_receiver_age_group=pd.DataFrame(count_receiver_age_group)
sns.barplot(data=count_receiver_age_group,x='receiver_age_group',y='count')
plt.title('count of Receiver age group')
plt.xlabel('receiver_age_group')
plt.show()

"""- The 26–35 age group is the most active in both sending and receiving UPI payments — likely due to higher spending habits and financial independence.
- The 56+ age group is the least active, possibly due to lower digital adoption or spending needs.

## Q3 Which devices and network types are preferred?
"""

dfn.groupby('device_type')['transaction id'].count()

# Let us check with network type also

dfn.groupby('device_type')['network_type'].value_counts()

sns.countplot(data=dfn, x='device_type', hue='network_type')
plt.title("Device Type vs Network Type")
plt.xlabel("Device Type")
plt.ylabel("Transaction Count")
plt.legend(title='Network Type')
plt.show()

"""- When grouped, phones (Android + iOS) are vastly more preferred than desktops for UPI transactions.
- Most users transact over 4G networks, suggesting high mobile usage and penetration.
-  Desktop usage may be limited to net banking or card payments, rather than UPI.

## Q4 Which merchant categories are the most popular?
"""

dfn.groupby('merchant_category')['transaction id'].count()

plt.figure(figsize=(10,6))
sns.countplot(data=dfn, x='merchant_category')
plt.title("Number of Transactions by Merchant Category")
plt.xlabel("Merchant Category")
plt.ylabel("Transaction Count")
plt.xticks(rotation=45, ha='right')
plt.show()

"""- Grocery is the most common merchant category for UPI transactions — likely due to frequent, low-value purchases.
- Education is the least common — possibly because high-value payments are not feasible via UPI due to limits or EMI-based structures.

## Q5 Which states or banks are the most active?
"""

plt.figure(figsize=(10,6))
sns.countplot(data=dfn,x='sender_state')
plt.xticks(rotation=45)
plt.show()

# receiver_bank
dfn['receiver_bank'].value_counts()

# sender_bank
dfn['sender_bank'].value_counts()

"""## Insights

- The highest number of transactions happen on **Monday evenings** and The lowest on **Saturday nights**.
- Across all days, **evenings consistently show the most activity**, while **nights see the least**.
- The **26–35 age group** is the most active in both sending and receiving UPI payments — likely due to **higher spending habits** and **financial independence**.
- The **56+ age group** is the least active, possibly due to **lower digital adoption** or **reduced financial activity**.
- **Mobile devices (Android + iOS)** are overwhelmingly preferred for UPI transactions over desktop (Web).
- Most transactions occur over **4G networks**, highlighting strong **mobile-first behavior**.
- **Grocery** is the most common category, likely due to **frequent low-value transactions**.
- **Education** sees the least usage, possibly due to **high costs** or **UPI transaction limits**.

## Recomendations
- Run time-specific campaigns Use low-activity hours (like Saturday night) for backend updates or testing.
- Introduce features tailored to 26–35 (e.g., personal finance tracking, instant credit, split bills). Provide tutorials or simplified modes for 56+ users to improve adoption.
- Prioritize mobile-first designs and in-app UPI features. Since Mobile devices (Android + iOS) dominate, investing in lightweight and intuitive apps can directly increase transactions.
- Ensure the app performs well on mid-range devices and varying network speeds — especially in rural or Tier 2/3 cities.
- Encourage adoption in low-UPI sectors like Education by raising limits or supporting EMI-like features. Partner with educational institutions or healthcare providers.
"""

dfn.drop('amount (INR)',axis=1,inplace=True)

dfn.to_csv('Cleaned_UPI_Transaction_2024.csv', index=False)

"""## Uploading dataframe into BigQuery"""